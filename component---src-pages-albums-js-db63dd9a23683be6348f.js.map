{"version":3,"sources":["webpack:///./src/components/elements/AlbumIcon.js","webpack:///./src/pages/albums.js"],"names":["Container","styled","a","Album","div","AlbumName","AlbumDate","AlbumIcon","props","cover","allFile","edges","filter","allCovers","node","childImageSharp","fluid","originalName","albumCover","href","storeLink","target","rel","title","albumName","albumDate","AlbumGrid","Albums","Layout"],"mappings":"2zHAiBMA,EAAYC,IAAOC,EAAV,uEAAGD,CAAH,oIAYTE,EAAQF,IAAOG,IAAV,mEAAGH,CAAH,2HAULI,EAAYJ,IAAOG,IAAV,uEAAGH,CAAH,mJAYTK,EAAYL,IAAOG,IAAV,uEAAGH,CAAH,qHA+CAM,EArCG,SAACC,GACjB,IAkBIC,EAlBM,OAkBOC,QAAQC,MAAMC,QAAO,SAAAC,GAAS,OAAIA,EAAUC,KAAKC,gBAAgBC,MAAMC,eAAiBT,EAAMU,cAAY,GAG3H,OACE,kBAAClB,EAAD,CAAWmB,KAAMX,EAAMY,UACvBC,OAAO,SACPC,IAAI,sBACJC,MAAOf,EAAMgB,UAAY,KAAOhB,EAAMiB,UAAY,KAChD,kBAAC,IAAD,CAAKT,MAAOP,EAAMK,KAAKC,gBAAgBC,QACvC,kBAACb,EAAD,KACE,kBAACG,EAAD,KAAYE,EAAMiB,WAClB,kBAACpB,EAAD,KAAYG,EAAMgB,c,wBCpFpBE,EAAYzB,IAAOG,IAAV,oEAAGH,CAAH,+FA4DA0B,UAnDA,kBACb,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKL,MAAM,WACX,kBAACG,EAAD,KACE,kBAAC,EAAD,CACEN,UAAW,+CACXI,UAAW,eACXN,WAAY,mBACZO,UAAW,aAEb,kBAAC,EAAD,CACEL,UAAW,qDACXI,UAAW,qBACXN,WAAY,yBACZO,UAAW,aAEb,kBAAC,EAAD,CACEL,UAAW,wDACXI,UAAW,wBACXN,WAAY,4BACZO,UAAW,aAEb,kBAAC,EAAD,CACEL,UAAW,4CACXI,UAAW,YACXN,WAAY,gBACZO,UAAW,aACb,kBAAC,EAAD,CACEL,UAAW,wDACXI,UAAW,wBACXN,WAAY,4BACZO,UAAW,aACb,kBAAC,EAAD,CACEL,UAAW,yDACXI,UAAW,yBACXN,WAAY,6BACZO,UAAW,aACb,kBAAC,EAAD,CACEL,UAAW,2CACXI,UAAW,QACXN,WAAY,eACZO,UAAW,aACb,kBAAC,EAAD,CACEL,UAAW,gDACXI,UAAW,aACXN,WAAY,oBACZO,UAAW","file":"component---src-pages-albums-js-db63dd9a23683be6348f.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport styled from \"styled-components\"\n\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Container = styled.a`\n  width: 300px;\n  margin: 10px;\n  background: #eef5fb;\n  padding: 10px;\n  border-radius: 5px;\n  &:hover{\n    background: #ed98db;\n    padding: 15px;\n    margin: 5px;\n  }\n`\nconst Album = styled.div`\n  text-align: center;\n  background: #ed98db;\n  color: #eef5fb;\n  padding: 10px;\n  font-family: 'Anton';\n  user-select: none;\n  margin-top: 10px;\n`\n\nconst AlbumName = styled.div`\n  text-align: center;\n  background: #ed98db;\n  color: #eef5fb;\n  font-family: 'Anton';\n  padding: 0;\n  margin: 0;\n  font-size: 1.5em;\n  margin-top: -15px;\n  margin-bottom: 5px;\n`\n\nconst AlbumDate = styled.div`\n  position: relative;\n  top: -10px;\n  right: 0px;\n  background: transparent;\n  text-align: right;\n  font-family: Lato;\n  font-size: 0.7em;\n`\n\nconst AlbumIcon = (props) => {\n  const data = useStaticQuery(graphql`\n  query {\n    allFile(filter: {relativeDirectory: {eq: \"albums\"}, name: {}}) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 900) {\n              originalName\n              ...GatsbyImageSharpFluid_noBase64\n            }\n          }\n        }\n      }\n    }\n  }\n`)\n\n\n  let cover = data.allFile.edges.filter(allCovers => allCovers.node.childImageSharp.fluid.originalName === props.albumCover)[0]\n\n\n  return (\n    <Container href={props.storeLink} \n    target=\"_blank\" \n    rel=\"noopener noreferrer\" \n    title={props.albumName + \" (\" + props.albumDate + \")\"}>\n      <Img fluid={cover.node.childImageSharp.fluid} />\n      <Album>\n        <AlbumDate>{props.albumDate}</AlbumDate>\n        <AlbumName>{props.albumName}</AlbumName>\n      </Album>\n      \n    </Container>\n  )\n}\n\nexport default AlbumIcon\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport AlbumIcon from \"../components/elements/AlbumIcon\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/Seo\"\n\nconst AlbumGrid = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n`\n\n\nconst Albums = () => (\n  <Layout>\n    <SEO title=\"Albums\" />\n    <AlbumGrid>\n      <AlbumIcon\n        storeLink={\"https://twrp.bandcamp.com/album/over-the-top\"}\n        albumName={\"Over The Top\"}\n        albumCover={\"over-the-top.jpg\"}\n        albumDate={\"Sep 2020\"}\n      />\n      <AlbumIcon\n        storeLink={\"https://twrp.bandcamp.com/album/return-to-wherever\"}\n        albumName={\"Return to Wherever\"}\n        albumCover={\"return-to-wherever.jpg\"}\n        albumDate={\"Jul 2019\"}\n      />\n      <AlbumIcon\n        storeLink={\"https://twrp.bandcamp.com/album/together-through-time\"}\n        albumName={\"Together Through Time\"}\n        albumCover={\"together-through-time.jpg\"}\n        albumDate={\"May 2018\"}\n      />\n      <AlbumIcon\n        storeLink={\"https://twrp.bandcamp.com/album/ladyworld\"}\n        albumName={\"Ladyworld\"}\n        albumCover={\"ladyworld.jpg\"}\n        albumDate={\"Jan 2017\"} />\n      <AlbumIcon\n        storeLink={\"https://twrp.bandcamp.com/album/guardians-of-the-zone\"}\n        albumName={\"Guardians of the Zone\"}\n        albumCover={\"guardians-of-the-zone.jpg\"}\n        albumDate={\"Apr 2016\"} />\n      <AlbumIcon\n        storeLink={\"https://twrp.bandcamp.com/album/believe-in-your-dreams\"}\n        albumName={\"Believe in Your Dreams\"}\n        albumCover={\"believe-in-your-dreams.jpg\"}\n        albumDate={\"Sep 2015\"} />\n      <AlbumIcon\n        storeLink={\"https://twrp.bandcamp.com/album/2nite-ep\"}\n        albumName={\"2nite\"}\n        albumCover={\"2nite-ep.jpg\"}\n        albumDate={\"Jan 2015\"} />\n      <AlbumIcon\n        storeLink={\"https://twrp.bandcamp.com/album/the-device-ep\"}\n        albumName={\"The Device\"}\n        albumCover={\"the-device-ep.jpg\"}\n        albumDate={\"Sep 2012\"} />\n    </AlbumGrid>\n  </Layout>\n)\n\nexport default Albums\n"],"sourceRoot":""}